PHASE 0 — Project Setup & Scaffolding
- [x] Confirm repo structure and dependencies
- [x] Create `src/types.rs` with all spec types and methods
- [x] Create `src/api.rs` with `PhysicsWorldApi` and `NarrowphaseApi` trait signatures
- [x] Create `src/world.rs` with `PhysicsWorld` skeleton impl of `PhysicsWorldApi`
- [x] Create `src/narrowphase.rs` with `Narrowphase` skeleton impl of `NarrowphaseApi`
- [x] Update `src/lib.rs` to expose modules and re-exports
- [x] Verify build with `cargo check` (adjust edition if needed)

PHASE 1 — Types & Masks
- LayerMask
  - [x] Signature present: struct fields `layer`, `collides_with`, `exclude`
  - [x] Signature present: `simple(layer, collides_with)`
  - [x] Signature present: `allows(self, other)`
  - [ ] Implement behavior and property tests
- ColliderKind
  - [x] Signature present: `Aabb { half_extents }`, `Circle { radius }`, `Point`
  - [ ] Implement helper utilities (aabb min/max, etc.)
  - [ ] Unit tests for helpers
- ColliderDesc
  - [x] Signature present: fields `kind`, `center`, `mask`, `user_key`
  - [ ] Validation helpers (optional)
- Motion
  - [x] Signature present: field `vel`
  - [ ] Helpers for swept AABB computation (optional)
- Overlap / SweepHit / EventKind / FrameId / Event / WorldConfig
  - [x] Signatures present
  - [ ] Document invariants (e.g., `toi in [0,1]`, `depth >= 0`)
  - [ ] Add debug asserts where useful

PHASE 2 — Narrowphase: Overlaps (Discrete)
- overlap_aabb_aabb
  - [x] Signature present
  - [x] Implement SAT computation and contact data
  - [x] Unit tests: touching edges, full overlap, separated axes
- overlap_circle_circle
  - [x] Signature present
  - [x] Implement and compute normal/contact/depth
  - [x] Unit tests: tangent, overlap, no-overlap
- overlap_point_aabb
  - [x] Signature present
  - [x] Implement
  - [x] Unit tests: inside, boundary, outside
- overlap_point_circle
  - [x] Signature present
  - [x] Implement
  - [x] Unit tests: inside, boundary, outside

PHASE 3 — Narrowphase: Rays and Segments
- ray_aabb
  - [x] Signature present
  - [x] Implement slab method; compute `toi`, `normal`, `contact`
  - [x] Unit tests: entry/exit, parallel, no hit
- ray_circle
  - [x] Signature present
  - [x] Implement quadratic solve; earliest positive `toi`
  - [x] Unit tests: direct hit
- line_segment_aabb
  - [x] Signature present
  - [x] Implement using clipped ray or segment slabs
  - [x] Unit tests: segment fully outside, intersecting
- line_segment_circle
  - [x] Signature present
  - [x] Implement
  - [x] Unit tests: chord

PHASE 4 — Narrowphase: Continuous Sweeps (CCD)
- sweep_aabb_aabb
  - [x] Signature present
  - [x] Implement relative motion with Minkowski sums (expanded AABB)
  - [x] Unit tests: head-on
- sweep_circle_aabb
  - [x] Signature present
  - [x] Implement (circle vs expanded AABB)
  - [x] Unit tests: head-on
- sweep_circle_circle
  - [x] Signature present
  - [x] Implement via relative motion (reduce to ray-circle)
  - [x] Unit tests: head-on

PHASE 5 — World: Data Structures & Broadphase
- Frame storage
  - [x] Define internal collider arrays (desc, motion, ids, keys)
  - [x] Maintain `FrameId` mapping to indices (index-based)
  - [ ] Enforce unique user keys (optional warning/debug assert)
- Grid build (`end_frame`)
  - [x] Compute static/swept AABBs based on `cfg.tighten_swept_aabb`
  - [x] Insert colliders into uniform grid cells
  - [x] Unit tests: coverage of cells (origin-straddling case)
- Mask filtering
  - [x] Implement mutual consent mask check (A↔B)
  - [x] Unit tests

PHASE 6 — World: Event Generation
- Broadphase iteration
  - [x] Iterate candidate pairs per grid cell; avoid duplicates
  - [x] Early filter by masks
- Narrowphase dispatch
  - [x] Overlaps when relative velocity ~ 0 and `enable_overlap_events`
  - [x] Sweeps for non-zero relative velocity and `enable_sweep_events`
  - [x] Respect `max_events` limit
- Event buffer
  - [x] Store `(kind, a, b, keys, data)`
  - [x] `drain_events` clears and returns
  - [x] Unit tests: event count and key plumbing

PHASE 7 — World: Queries
- raycast
  - [x] Signature present
  - [x] Implement grid-stepping (DDA) for broadphase + narrowphase hits
  - [x] Unit tests: closest hit
- query_point
  - [x] Signature present
  - [x] Implement via grid lookup and shape tests
  - [x] Unit tests
- query_aabb
  - [x] Signature present
  - [x] Implement via grid range scan
  - [x] Unit tests
- query_circle
  - [x] Signature present
  - [x] Implement via grid range scan + circle checks
  - [x] Unit tests

PHASE 8 — Pairwise Helpers
- overlap_pair
  - [x] Signature present
  - [x] Implement by fetching colliders and dispatching by kinds
  - [x] Unit tests (subset via world queries)
- sweep_pair
  - [x] Signature present
  - [x] Implement via relative velocity + dispatch
  - [x] Unit tests (via event generation)
- overlap_by_key / sweep_by_key
  - [x] Signature present
  - [x] Implement key→id lookup and delegate
  - [x] Unit tests (key plumbing)

PHASE 9 — Examples, Docs, and CI
- [x] Example: Breakout-style scene wire-up producing events
- [x] Example: Raycast demo over random colliders
- [x] README: usage, features, limitations (no resolution), perf notes
- [x] Doc comments on public API, invariants, and semantics
- [x] (Optional) simple example-based benchmark

PHASE 10 — Polish & Maintenance
- [x] Audit panics; add debug assertions and document behavior
- [x] Add `Debug`/`Clone` derives where ergonomic (core types derive)
- [x] Final pass on naming and module layout
- [x] Changelog added (0.1.0)

Notes / Open Questions
- World is ephemeral per frame; no persistent contacts or manifold caching
- Mask rule requires mutual consent (A→B and B→A)
- No contact resolution; only detection + event emission
